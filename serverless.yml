service: iot-cold-chain-monitoring-server
frameworkVersion: '3'

custom:
  stage: 'dev'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${self:custom.stage}
  region: eu-west-1
  environment:
    USER_POOL_CLIENT_ID: !Ref CognitoUserPool
#    USER_POOL_CLIENT_ID: ${self:service}-${self:custom.stage}-user-pool-client
# By default, one IAM Role is shared by all the Lambda functions in your service
# TODO assign specific Policies to specific roles, especially for sign up
#  iam:
#    role:
#      statements:
#        - Effect: Allow
#          Action:
#            - cognito-idp:AdminCreateUser
#          Resource: '*'

resources:
  Resources:
    CognitoUserPool: ${file(resources/cognito-users.yml):CognitoUserPool}
    CognitoUserPoolClient: ${file(resources/cognito-users.yml):CognitoUserPoolClient}
    AdminManageUsersRole: ${file(resources/iam/AdminManageUsersRole.yml):AdminManageUsersRole}

functions:
#  signIn:
#    handler: src/handlers/auth.signIn
#    events:
#      - httpApi:
#          path: /auth/signin
#          method: POST
#          cors: true

  signUp:
    handler: src/handlers/auth/signUp.handler
    role: AdminManageUsersRole
    events:
      - httpApi:
          path: /auth/signup
          method: POST
          cors: true

#  catchAllAny:
#    handler: index
#    events:
#      - httpApi: '*'